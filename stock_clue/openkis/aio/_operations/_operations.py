# pylint: disable=too-many-lines,too-many-statements
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/python@6.13.15)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from io import IOBase
import sys
from typing import Any, Callable, Dict, IO, Optional, Type, TypeVar, Union, cast, overload

from azure.core.exceptions import (
    ClientAuthenticationError,
    HttpResponseError,
    ResourceExistsError,
    ResourceNotFoundError,
    ResourceNotModifiedError,
    map_error,
)
from azure.core.pipeline import PipelineResponse
from azure.core.rest import AsyncHttpResponse, HttpRequest
from azure.core.tracing.decorator_async import distributed_trace_async
from azure.core.utils import case_insensitive_dict

from ..._operations._operations import build_gen_open_kis_get_access_token_request
from .._vendor import GenOpenKisClientMixinABC

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object
T = TypeVar("T")
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, AsyncHttpResponse], T, Dict[str, Any]], Any]]


class GenOpenKisClientOperationsMixin(GenOpenKisClientMixinABC):

    @overload
    async def get_access_token(
        self, body: Optional[JSON] = None, *, content_type: str = "application/json", **kwargs: Any
    ) -> JSON:
        # pylint: disable=line-too-long
        """Get Access Token.

        Access Token 발급
        =================

        본인 계좌에 필요한 인증 절차로, 인증을 통해 접근 토큰을 부여받아 오픈API 활용이 가능합니다.

        :param body: Default value is None.
        :type body: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                body = {
                    "appkey": "str",  # "ud55c"uad6d"ud22c"uc790"uc99d"uad8c
                      "ud648"ud398"uc774"uc9c0"uc5d0"uc11c "ubc1c"uae09"ubc1b"uc740 appkey
                      ("uc808"ub300 "ub178"ucd9c"ub418"uc9c0 "uc54a"ub3c4"ub85d
                      "uc8fc"uc758"ud574"uc8fc"uc138"uc694.). Required.
                    "appsecret": "str",  # "ud55c"uad6d"ud22c"uc790"uc99d"uad8c
                      "ud648"ud398"uc774"uc9c0"uc5d0"uc11c "ubc1c"uae09"ubc1b"uc740 appsecret
                      ("uc808"ub300 "ub178"ucd9c"ub418"uc9c0 "uc54a"ub3c4"ub85d
                      "uc8fc"uc758"ud574"uc8fc"uc138"uc694.). Required.
                    "grant_type": "str"  # "uc778"uc99d"ubc29"uc2dd (client_credentials
                      "uace0"uc815). Required.
                }

                # response body for status code(s): 200
                response == {
                    "access_token": "str",  # Optional. OAuth "ud1a0"ud070"uc774
                      "ud544"uc694"ud55c API "uacbd"uc6b0 "ubc1c"uae09"ud55c Access token ex)
                      "eyJ0eXUxMiJ9.eyJz"u2026..................................."   *
                      "uc77c"ubc18"uac1c"uc778"uace0"uac1d/"uc77c"ubc18"ubc95"uc778"uace0"uac1d   .
                      Access token "uc720"ud6a8"uae30"uac04 1"uc77c   ..
                      "uc77c"uc815"uc2dc"uac04(6"uc2dc"uac04) "uc774"ub0b4"uc5d0 "uc7ac"ud638"ucd9c
                      "uc2dc"uc5d0"ub294 "uc9c1"uc804 "ud1a0"ud070"uac12"uc744 "ub9ac"ud134   . OAuth
                      2.0"uc758 Client Credentials Grant "uc808"ucc28"ub97c "uc900"uc6a9  *
                      "uc81c"ud734"ubc95"uc778   . Access token "uc720"ud6a8"uae30"uac04 3"uac1c"uc6d4
                      . Refresh token "uc720"ud6a8"uae30"uac04 1"ub144   . OAuth 2.0"uc758
                      Authorization Code Grant "uc808"ucc28"ub97c "uc900"uc6a9.
                    "access_token_token_expire": "2020-02-20 00:00:00",  # Optional. Access token
                      "ub9cc"ub8cc"uc2dc"uac04 ("ub144:"uc6d4:"uc77c "uc2dc:"ubd84:"ucd08).
                    "expires_in": 0,  # Optional. Access token "ub9cc"ub8cc"uc2dc"uac04 ("ucd08).
                    "token_type": "str"  # Optional. "uc811"uadfc"ud1a0"ud070"uc720"ud615 (Bearer
                      "uace0"uc815).
                }
        """

    @overload
    async def get_access_token(
        self, body: Optional[IO[bytes]] = None, *, content_type: str = "application/json", **kwargs: Any
    ) -> JSON:
        # pylint: disable=line-too-long
        """Get Access Token.

        Access Token 발급
        =================

        본인 계좌에 필요한 인증 절차로, 인증을 통해 접근 토큰을 부여받아 오픈API 활용이 가능합니다.

        :param body: Default value is None.
        :type body: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response == {
                    "access_token": "str",  # Optional. OAuth "ud1a0"ud070"uc774
                      "ud544"uc694"ud55c API "uacbd"uc6b0 "ubc1c"uae09"ud55c Access token ex)
                      "eyJ0eXUxMiJ9.eyJz"u2026..................................."   *
                      "uc77c"ubc18"uac1c"uc778"uace0"uac1d/"uc77c"ubc18"ubc95"uc778"uace0"uac1d   .
                      Access token "uc720"ud6a8"uae30"uac04 1"uc77c   ..
                      "uc77c"uc815"uc2dc"uac04(6"uc2dc"uac04) "uc774"ub0b4"uc5d0 "uc7ac"ud638"ucd9c
                      "uc2dc"uc5d0"ub294 "uc9c1"uc804 "ud1a0"ud070"uac12"uc744 "ub9ac"ud134   . OAuth
                      2.0"uc758 Client Credentials Grant "uc808"ucc28"ub97c "uc900"uc6a9  *
                      "uc81c"ud734"ubc95"uc778   . Access token "uc720"ud6a8"uae30"uac04 3"uac1c"uc6d4
                      . Refresh token "uc720"ud6a8"uae30"uac04 1"ub144   . OAuth 2.0"uc758
                      Authorization Code Grant "uc808"ucc28"ub97c "uc900"uc6a9.
                    "access_token_token_expire": "2020-02-20 00:00:00",  # Optional. Access token
                      "ub9cc"ub8cc"uc2dc"uac04 ("ub144:"uc6d4:"uc77c "uc2dc:"ubd84:"ucd08).
                    "expires_in": 0,  # Optional. Access token "ub9cc"ub8cc"uc2dc"uac04 ("ucd08).
                    "token_type": "str"  # Optional. "uc811"uadfc"ud1a0"ud070"uc720"ud615 (Bearer
                      "uace0"uc815).
                }
        """

    @distributed_trace_async
    async def get_access_token(self, body: Optional[Union[JSON, IO[bytes]]] = None, **kwargs: Any) -> JSON:
        # pylint: disable=line-too-long
        """Get Access Token.

        Access Token 발급
        =================

        본인 계좌에 필요한 인증 절차로, 인증을 통해 접근 토큰을 부여받아 오픈API 활용이 가능합니다.

        :param body: Is either a JSON type or a IO[bytes] type. Default value is None.
        :type body: JSON or IO[bytes]
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                body = {
                    "appkey": "str",  # "ud55c"uad6d"ud22c"uc790"uc99d"uad8c
                      "ud648"ud398"uc774"uc9c0"uc5d0"uc11c "ubc1c"uae09"ubc1b"uc740 appkey
                      ("uc808"ub300 "ub178"ucd9c"ub418"uc9c0 "uc54a"ub3c4"ub85d
                      "uc8fc"uc758"ud574"uc8fc"uc138"uc694.). Required.
                    "appsecret": "str",  # "ud55c"uad6d"ud22c"uc790"uc99d"uad8c
                      "ud648"ud398"uc774"uc9c0"uc5d0"uc11c "ubc1c"uae09"ubc1b"uc740 appsecret
                      ("uc808"ub300 "ub178"ucd9c"ub418"uc9c0 "uc54a"ub3c4"ub85d
                      "uc8fc"uc758"ud574"uc8fc"uc138"uc694.). Required.
                    "grant_type": "str"  # "uc778"uc99d"ubc29"uc2dd (client_credentials
                      "uace0"uc815). Required.
                }

                # response body for status code(s): 200
                response == {
                    "access_token": "str",  # Optional. OAuth "ud1a0"ud070"uc774
                      "ud544"uc694"ud55c API "uacbd"uc6b0 "ubc1c"uae09"ud55c Access token ex)
                      "eyJ0eXUxMiJ9.eyJz"u2026..................................."   *
                      "uc77c"ubc18"uac1c"uc778"uace0"uac1d/"uc77c"ubc18"ubc95"uc778"uace0"uac1d   .
                      Access token "uc720"ud6a8"uae30"uac04 1"uc77c   ..
                      "uc77c"uc815"uc2dc"uac04(6"uc2dc"uac04) "uc774"ub0b4"uc5d0 "uc7ac"ud638"ucd9c
                      "uc2dc"uc5d0"ub294 "uc9c1"uc804 "ud1a0"ud070"uac12"uc744 "ub9ac"ud134   . OAuth
                      2.0"uc758 Client Credentials Grant "uc808"ucc28"ub97c "uc900"uc6a9  *
                      "uc81c"ud734"ubc95"uc778   . Access token "uc720"ud6a8"uae30"uac04 3"uac1c"uc6d4
                      . Refresh token "uc720"ud6a8"uae30"uac04 1"ub144   . OAuth 2.0"uc758
                      Authorization Code Grant "uc808"ucc28"ub97c "uc900"uc6a9.
                    "access_token_token_expire": "2020-02-20 00:00:00",  # Optional. Access token
                      "ub9cc"ub8cc"uc2dc"uac04 ("ub144:"uc6d4:"uc77c "uc2dc:"ubd84:"ucd08).
                    "expires_in": 0,  # Optional. Access token "ub9cc"ub8cc"uc2dc"uac04 ("ucd08).
                    "token_type": "str"  # Optional. "uc811"uadfc"ud1a0"ud070"uc720"ud615 (Bearer
                      "uace0"uc815).
                }
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[JSON] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(body, (IOBase, bytes)):
            _content = body
        else:
            if body is not None:
                _json = body
            else:
                _json = None

        _request = build_gen_open_kis_get_access_token_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = await self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            if _stream:
                await response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})  # type: ignore

        return cast(JSON, deserialized)  # type: ignore
